// <auto-generated />
using System;
using DziennikTreningowy.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DziennikTreningowy.Infrastructure.Migrations
{
    [DbContext(typeof(WorkoutDiaryDbContext))]
    partial class WorkoutDiaryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DziennikTreningowy.Core.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.HasKey("ExerciseId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("DziennikTreningowy.Core.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Avatar")
                        .HasMaxLength(1000);

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .HasMaxLength(255);

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DziennikTreningowy.Core.Models.UserExercise", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("ExerciseId");

                    b.HasKey("UserId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("UserExercise");
                });

            modelBuilder.Entity("DziennikTreningowy.Core.Models.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Location")
                        .HasMaxLength(255);

                    b.Property<int?>("UserId");

                    b.HasKey("WorkoutId");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("DziennikTreningowy.Core.Models.WorkoutExercise", b =>
                {
                    b.Property<int>("WorkoutExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExerciseId");

                    b.Property<int>("NumberOfReps");

                    b.Property<int>("SetNumber");

                    b.Property<double>("Weight");

                    b.Property<int?>("WorkoutId");

                    b.HasKey("WorkoutExerciseId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutExercises");
                });

            modelBuilder.Entity("DziennikTreningowy.Core.Models.WorkoutTemplate", b =>
                {
                    b.Property<int>("WorkoutTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int?>("UserId");

                    b.HasKey("WorkoutTemplateId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkoutTemplates");
                });

            modelBuilder.Entity("DziennikTreningowy.Core.Models.WorkoutTemplateExercise", b =>
                {
                    b.Property<int>("WorkoutTemplateId");

                    b.Property<int>("ExerciseId");

                    b.HasKey("WorkoutTemplateId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("WorkoutTemplateExercise");
                });

            modelBuilder.Entity("DziennikTreningowy.Core.Models.UserExercise", b =>
                {
                    b.HasOne("DziennikTreningowy.Core.Models.Exercise", "Exercise")
                        .WithMany("UserExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DziennikTreningowy.Core.Models.User", "User")
                        .WithMany("UserExercises")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DziennikTreningowy.Core.Models.Workout", b =>
                {
                    b.HasOne("DziennikTreningowy.Core.Models.User")
                        .WithMany("UserWorkouts")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("DziennikTreningowy.Core.Models.WorkoutExercise", b =>
                {
                    b.HasOne("DziennikTreningowy.Core.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId");

                    b.HasOne("DziennikTreningowy.Core.Models.Workout")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutId");
                });

            modelBuilder.Entity("DziennikTreningowy.Core.Models.WorkoutTemplate", b =>
                {
                    b.HasOne("DziennikTreningowy.Core.Models.User")
                        .WithMany("WorkoutTemplates")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("DziennikTreningowy.Core.Models.WorkoutTemplateExercise", b =>
                {
                    b.HasOne("DziennikTreningowy.Core.Models.Exercise", "Exercise")
                        .WithMany("WorkoutTemplateExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DziennikTreningowy.Core.Models.WorkoutTemplate", "WorkoutTemplate")
                        .WithMany("WorkoutTemplateExercises")
                        .HasForeignKey("WorkoutTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
